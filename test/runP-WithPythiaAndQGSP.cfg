process PROD  = 
{

   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}

      untracked vstring categories = { "FwkJob", "SimG4CoreApplication" }

      untracked PSet cout = 
      {
         untracked PSet default = { untracked int32 limit = 0 }  # kill all messages in the log
	 untracked PSet FwkJob  = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
	 untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 } 
      }

      # uncomment if you want it...
      #
      # untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}      
   }

   service = Timing {}
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
      }
   }

   include "IOMC/GeneratorInterface/data/PythiaSourceMinBias.cfi"
   replace PythiaSource.maxEvents = 20
   replace PythiaSource.pythiaHepMCVerbosity = false
   replace PythiaSource.pythiaPylistVerbosity = 0


   # event vertex smearing - applies only once (internal check)
   # Note : all internal generators will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

   #Geometry
   #
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
   
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Event, etc. output
   #
   module GEN-SIM = PoolOutputModule { untracked string fileName = "pythia_minbias_detsim.root" }
		
   # Geant4-based CMS Detector simulation
   #
   include "SimG4Core/Application/data/g4SimHits.cfi"
   ### replace g4SimHits.StoreRndmSeeds = true

   # now the order of execution
   #   
   path p1 = { VtxSmeared, g4SimHits }
   endpath outpath = { GEN-SIM }
   
}		

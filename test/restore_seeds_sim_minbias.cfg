process RESTORE =
{


   # NOTE: This example is related to "simulated event reproducibility".
   #       It shows how to restore random seeds saved in the previous run, 
   #       starting from any given event, and reproduce(resimulate) 
   #       particles passage through detector (in this particular example,
   #       wi skip the fisrt 3 events and start re-production with event #4)
   #         
   #       It's supposed to execute AFTER running runP-WithPythiaAndQGSP.cfg,    
   #       because it takes the output of the later on the input.
   #       In its turn, runP-WithPYthiaAndQGSP.cfg example shows how to save
   #       ramndom seeds into edm::Event, and what module(s) do the job.


   # Run through the end of the input file
   #
   untracked PSet maxEvents = { untracked int32 input = -1}
   
   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}      
      untracked vstring categories = { "FwkJob", "SimG4CoreApplication" }            
      untracked PSet cout = 
      { 
         untracked PSet default = { untracked int32 limit = 0 }
	 #untracked PSet FwkJob  = { untracked int32 limit = -1 }
	 untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 }
      }
   }
   
   service = Timing {}

   source = PoolSource
   {

      untracked vstring fileNames = {"file:pythia_minbias_detsim.root"}

      untracked uint32 skipEvents = 3   # skip the first 3 events, 
                                        # start with event 4 and
                                        # run through the end of file
					# (see maxEvents above...) 

   }
   
   service = RandomNumberGeneratorService 
   {
      untracked string restoreStateLabel = "rndmStore" # this label MUST correspond
                                                       # to what it was in the original run
						       # for the RandomEngineStateProducer
      PSet moduleSeeds =
      {
         untracked uint32 g4SimHits = 1 # it doesn't matter what seed one puts here
	                                # but some seed should be there, for the Fwk
      }
   }
      
   include "SimG4Core/Configuration/data/SimG4Core.cff"

   # Root/Pool output
   #
   module USER = PoolOutputModule 
   { 
      untracked string fileName = "restore_rndm_minbias_detsim.root" 
   }

   path p1 = { g4SimHits }
   endpath out = { USER }
   
}

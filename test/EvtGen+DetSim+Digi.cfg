process PROD  = 
	{

    
    # NOTE : if one wants to run with the SiStripDigitizer,
    #        then mag.field in the OscarProducer should be
    #        turned ON; otherwise it gets (re)created by the
    #        SiStripDigitizer, which seems to corrupt at all 
    #        the edm::Event record
    
    
    # flat random E-gun, single pion
    #
    # to run it along with CMS detector simulation
    # (OscarProducer) make sure to select QGSP physics
    # list, instead DummyPhysics ("Dummy" has only EM 
    # process and wont know to model interactions of
    # hadrons with matter)
    #
    source = FlatRandomEGunSource
    {
      untracked int32 maxEvents = 5 
      PSet PGunParameters =
      {
         # you can request more than 1 particle
         #vint32  PartID = {211,11}
         vint32 PartID = { 211, -211 } 
         double MinEta = -2.5
         double MaxEta = 2.5
         double MinPhi = 0.
         double MaxPhi = 360.
         double MinE  = 9.99
         double MaxE  = 10.01
      }
    }

 
		#NOTE in 0_3_0_pre5 mag field and geomeetry are interfereing again
		#Magnetic Field
		es_source magfield = XMLIdealGeometryESSource {
		  FileInPath GeometryConfiguration ="SimG4Core/Application/test/FieldConfiguration.xml"
		  #the proper root node is set in the xml file
		  string rootNodeName=""
		}
		es_module = VolumeBasedMagneticFieldESProducer {
 	           double findVolumeTolerance = 0.0
 	           untracked bool cacheLastVolume = true
	           untracked bool timerOn = false
		}

		#Geometry
		es_source = XMLIdealGeometryESSource 
		{ FileInPath GeometryConfiguration = "SimG4Core/Application/test/SimConfiguration.xml"
		  #the proper root node is set in the xml file
		  string rootNodeName = ""
                }
		es_module = TrackerGeometricDetESModule {}
		
		es_module = TrackerDigiGeometryESModule {}


  es_module = EcalBarrelGeometryEP {}
  es_module = HcalHardcodeGeometryEP {}
  es_module = CaloTowerHardcodeGeometryEP {}
  es_module = CaloGeometryBuilder {}

  module ecaldigi = EcalDigiProducer {}

#  module hcaldigi = HcalDigiProducer {} 
#  es_module = HcalDbProducer {}
#  es_source es_hardcode = HcalHardcodeCalibrations 
#     {untracked vstring toGet = 
#        {"Pedestals", "PedestalWidths", "Gains", "GainWidths", "QIEShape", "QIEData", "ChannelQuality", "ElectronicsMap"}}
 
                module o1 = PoolOutputModule { string fileName = "simevent.root" }
		
 		module r = OscarProducer 
		{ 
			untracked int32 RunNumber = 1001
			untracked int32 G4EventManagerVerbosity = 0
			untracked int32 G4StackManagerVerbosity = 0
			untracked int32 G4TrackingManagerVerbosity = 0
			bool UseMagneticField = true
			# bool UseMagneticField = false
			bool OverrideUserStackingAction = true
			bool StoreRndmSeeds = false
			bool RestoreRndmSeeds = false
			string PhysicsTablesDirectory = "PhysicsTables"
			bool StorePhysicsTables = false
			bool RestorePhysicsTables = false
			#VPSet Watchers = {
			#	{ string type = "SimTracer"
			#	  bool verbose = true }
			#}
	                PSet MagneticField =
                        {
                                double delta = 1.
                        }
                	PSet Physics =
			{
				string type = "SimG4Core/Physics/QGSP"
				bool DummyEMPhysics = false
                                bool CutsPerRegion = true
				double DefaultCutValue = 10.
				int32 Verbosity = 0			
			}
			PSet Generator = 
			{
				bool ApplyPtCuts = true
				bool ApplyEtaCuts = true
				bool ApplyPhiCuts = false
				double MinPhiCut = 0.
				double MaxPhiCut = 360.
				double MinEtaCut = -3.5
				double MaxEtaCut = 3.5
				double MinPtCut = 40.
				double MaxPtCut = 999999.
				untracked string InputFileName = "Internal"
				untracked int32 Verbosity = 0
		        }
                        PSet VertexGenerator =
                        {
                                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
                                double MeanX = 0.
                                double MeanY = 0.
                                double MeanZ = 0.
                                double SigmaX = 0.015
                                double SigmaY = 0.015
                                double SigmaZ = 5.3
                        }

			PSet RunAction = { string StopFile = "StopRun" }
			PSet EventAction =
			{
				bool CollapsePrimaryVertices = false
				string StopFile = "StopRun"
				untracked bool debug = false
			}
			PSet TrackingAction = 
			{ 
			   untracked bool DetailedTiming = false 
			}
			PSet SteppingAction =
			{
				bool   KillBeamPipe = true
				double CriticalEnergyForVacuum = 2.0
				double CriticalDensity = 1.e-25
				untracked int32  Verbosity = 0
			}
			PSet TrackerSD =
			{
				bool    ZeroEnergyLoss = false
				bool	NeverAccumulate = false
				bool	PrintHits = false
				double  ElectronicSigmaInNanoSeconds = 12.06         
				double  EnergyThresholdForPersistencyInGeV = 0.5
				double  EnergyThresholdForHistoryInGeV = 0.05
			}
                        PSet MuonSD =
                        {
                                double  EnergyThresholdForPersistency = 1.0
                                bool    AllMuonsPersistent = false
                                bool    PrintHits = false
                        }

                        PSet CaloSD = {
                           double EminTrack = 1.0
                           int32  CheckHits = 25
                           bool   UseMap = true
                           int32  Verbosity = 1
                           bool   DetailedTiming = false
                        }
                        PSet ECalSD = {
                           bool   UseBirkLaw = false
                           double BirkC1 = 0.013
                           double BirkC2 = 9.6e-6
                           int32  Verbosity = 11
                        }
                        PSet HCalSD = {
                           bool   UseBirkLaw = false
                           double BirkC1 = 0.013
                           double BirkC2 = 9.6e-6
                           int32  Verbosity = 111
                           bool   UseShowerLibrary = true
                           bool   TestNumberingScheme = true
                        }
                        PSet CaloTrkProcessing = {
                           int32  Verbosity = 1
                           bool   TestBeam  = false
                           double EminTrack = 0.01
                        }                     
	                PSet HFShower =    {
                           int32  Verbosity = 11
                           double ProbMax   = 0.7268
                           double CFibre    = 0.50
                        }
                        PSet HFShowerLibrary = {
                           FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
                           string TreeEMID  = "h3"
                           string TreeHadID = "h8"
                        }
                        PSet HFCherenkov = {
                           int32  Verbosity       = 1
                           double RefIndex        = 1.459
                           double Lambda1         = 280.0
                           double Lambda2         = 700.0
                           double Aperture        = 0.33
                           double ApertureTrapped = 0.22
                           double Gain            = 0.33
                           bool   CheckSurvive    = false
	                }
		}


	module pixdigi =  SiPixelDigitizer 
	{
           string SimProducer = "SimDigitizer"	
           double ElectronPerAdc = 135.0 
	   int32 AdcFullScale = 255
	   double ThresholdInNoiseUnits = 5.
	   double TofCut = 12.5	  
           double TanLorentzAnglePerTesla =0.106
	   int32 AddPixelInefficiency = 0
	   bool AddNoise = true
	   bool AddNoisyPixels = true
           double DeltaProductionCut= 0.030 
	   bool FluctuateCharge = true
           double PixelEfficiency = -1.0
           double PixelColEfficiency = -1.0
           double PixelChipEfficiency = -1.0	   
	   bool MissCalibrate = false
	   double GainSmearing = 0.0
	   double OffsetSmearing = 0.0
	   int32 PixelROCRows = 80	   
	   int32 PixelROCCols = 52

	   untracked int32 VerbosityLevel = 0		 
	}

	module stripdigi =  SiStripDigitizer {
           string SimProducer = "SimDigitizer"	
	   bool APVpeakmode = false
	   bool NoNoise = false
	   bool LandauFluctuations = true
	   int32 chargeDivisionsPerStrip = 10
	   double DepletionVoltage = 140.
	   double AppliedVoltage = 150.
	   double ChargeMobility = 480.
	   double Temperature = 297.
	   bool noDiffusion = false
	   double ChargeDistributionRMS = 6.5e-10
	   double GevPerElectron = 3.61e-09

           double ElectronPerAdc = 313.0 
	   double EquivalentNoiseCharge300um = 2160.
	   double AdcThreshold = 2.
	   int32 AdcFullScale = 255
	   double ThresholdInNoiseUnits = 5.
           double TanLorentzAnglePerTesla =0.106
	   int32 AddStripInefficiency = 0
	   bool AddNoise = true
	   bool AddNoisyStrips = true
           double DeltaProductionCut= 0.120425 
	   bool FluctuateCharge = true
	   int32 addStripInefficiency = 0
           double StripEff = -1.0
           double StripChipEff = -1.0	   
	   bool MissCalibrate = false
	   double GainSmearing = 0.0
	   double OffsetSmearing = 0.0
	   int32 StripAPV = 128
	   
	   int32 FedAlgorithm = 4
	   double FedLowThreshold = 2.
	   double FedHighThreshold = 5.

	   untracked int32 VerbosityLevel = 0		 
	}

		# path p1 = { r, o1 }
		# path p1 = { r, pixdigi, ecaldigi, o1 }
		path p1 = { r, pixdigi, stripdigi, ecaldigi, o1 }
		# path p1 = { r, pixdigi, stripdigi, ecaldigi, hcaldigi, o1 }
	}		

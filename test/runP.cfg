process PROD  = 
{
   
    service = RandomNumberGeneratorService
    {
        PSet moduleSeeds =
        {
            untracked uint32 g4SimHits = 9876
        }
    }

   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}
      untracked vstring categories = { "FwkJob", "SimG4CoreApplication" } 
      untracked PSet cout =
      {
         untracked PSet default = { untracked int32 limit = 0 }
         untracked PSet FwkJob  = { untracked int32 limit = -1 }
	 untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 }
      }
   }
    
   service = Timing {}
 
   #The module which reade from a HepMC ASCII file
   #
   untracked PSet maxEvents = {untracked int32 input = 10}
   source = MCFileSource
   {
      # The HepMC test File
      untracked vstring fileNames = {"file:SherpaWriteHepMC.dat"}
   }		
		
   #Geometry
   #
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}

   #Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Output of events, etc...
   #
   module o1 = PoolOutputModule { untracked string fileName = "simevent.root" }

   # Detector simulation (Geant4-based)
   #
   include "SimG4Core/Application/data/g4SimHits.cfi"
   replace g4SimHits.Physics.type = "SimG4Core/Physics/DummyPhysics"
   replace g4SimHits.Physics.DummyEMPhysics = true
   replace g4SimHits.Generator.HepMCProductLabel = "source"
   
   path p1 = { g4SimHits }
   endpath outpath = { o1 }

}		

process PROD  = 
	{
		source = EmptySource { int32 maxEvents = 10 }

		#NOTE: declaration of Magnetic field must come before
		# Geometry else they will interfere and the 
		# tracking geometry will not build

		#Magnetic Field
		es_source mag = XMLIdealGeometryESSource {
		  FileInPath GeometryConfiguration ="Geometry/CMSCommonData/configuration.xml"
		  string rootNodeName="MagneticFieldVolumes:MAGF"
		}
		es_module = VolumeBasedMagneticFieldESProducer {
		}

		#Geometry
		es_source geom = XMLIdealGeometryESSource 
		{ FileInPath GeometryConfiguration = "SimG4Core/Application/test/SimConfiguration.xml"
		  string rootNodeName = ""}
		es_module = TrackerGeometricDetESModule {}


                module o1 = PoolOutputModule { string fileName = "simevent.root" }
 		module r = OscarProducer 
		{ 
			int32 RunNumber = 1001
			int32 G4EventManagerVerbosity = 0
			int32 G4StackManagerVerbosity = 0
			int32 G4TrackingManagerVerbosity = 0
			bool  OverrideUserStackingAction = true
			bool StoreRndmSeeds = false
			bool RestoreRndmSeeds = false
			string PhysicsTablesDirectory = "PhysicsTables"
			bool StorePhysicsTables = false
			bool RestorePhysicsTables = false
	                PSet MagneticField =
                        {
                                double delta = 1.
                        }
                	PSet Physics =
			{
				string type = "SimG4Core/Physics/DummyPhysics"
				bool DummyEMPhysics = true
                                bool CutsPerRegion = true
				double DefaultCutValue = 10.
				int32 Verbosity = 0			
			}
                        PSet VertexGenerator =
                        {
                                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
                                double MeanX = 0.
                                double MeanY = 0.
                                double MeanZ = 0.
				double SigmaX = 0.015
				double SigmaY = 0.015
				double SigmaZ = 5.3
                        }
			PSet Generator = 
			{
				bool ApplyPtCuts = true
				bool ApplyEtaCuts = true
				bool ApplyPhiCuts = false
				double MinPhiCut = 0.
				double MaxPhiCut = 360.
				double MinEtaCut = -5.5
				double MaxEtaCut = 5.5
				double MinPtCut = 40.
				double MaxPtCut = 999999.
				string InputFileName = "SherpaWriteHepMC.dat"
				int32 Verbosity = 0
		        }
                        PSet VertexGenerator =
                        {
                                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
                                double MeanX = 0.
                                double MeanY = 0.
                                double MeanZ = 0.
                                double SigmaX = 0.015
                                double SigmaY = 0.015
                                double SigmaZ = 5.3
                        }

			PSet RunAction = { string StopFile = "StopRun" }
			PSet EventAction =
			{
				bool CollapsePrimaryVertices = false
				string StopFile = "StopRun"
				bool debug = false
			}
			PSet TrackingAction = { bool DetailedTiming = false }
			PSet SteppingAction =
			{
				bool   KillBeamPipe = true
				double CriticalEnergyForVacuum = 2.0
				double CriticalDensity = 1.e-25
				int32  Verbosity = 0
			}
			PSet TrackerSD =
			{
				bool    ZeroEnergyLoss = false
				bool	NeverAccumulate = false
				bool	PrintHits = false
				double  ElectronicSigmaInNanoSeconds = 12.06         
			}
			PSet TkSimTrack =
			{
				double  EnergyThresholdForPersistencyInGeV = 0.5
				double  EnergyThresholdForHistoryInGeV = 0.05
			}
 			PSet CaloSD =
			{
				double EminTrack = 1.0
				int32  CheckHits = 25
				bool   UseMap = true
				int32  Verbosity = 0
				bool   DetailedTiming = false
			}
 			PSet HCalSD =
			{
				double EminTrack = 1.0
				int32  CheckHits = 25
				bool   UseMap = true
				int32  Verbosity = 0
				bool   DetailedTiming = false
				bool UseBirkLaw = false
				double BirkC1 = 0.013
				double BirkC2 = 9.6e-6
				bool UseShowerLibrary = false
 		 		bool TestNumberingScheme = false

			}
			PSet CaloTrkProcessing = {
				int32  Verbosity = 0
			     	bool   TestBeam  = false
			     	double EminTrack = 0.01
			}		     
			PSet HFShower =
			{
				int32 Verbosity = 0
				double CFibre = 0.5
				double ProbMax = 0.7268
			}
			#PSet HFShowerLibrary = {
		     	#	FileInPath FileName = "SimG4CMS/Calo/test/hfshowerlibrary_lhep.root"
		     	#	string TreeEMID  = "h3"
		     	#	string TreeHadID = "h8"
			#}
			PSet HFCherenkov = {
		     		int32  Verbosity       = 0
		     		double RefIndex        = 1.459
		     		double Lambda1         = 280.0
		     		double Lambda2         = 700.0
		     		double Aperture        = 0.33
		     		double ApertureTrapped = 0.22
		     		double Gain            = 0.33
		     		bool   CheckSurvive    = false
			}
			PSet ECalSD =
			{
				bool   UseBirkLaw = false
				double BirkC1 = 0.013
				double BirkC2 = 9.6e-6
				int32  Verbosity = 0
			}
                        PSet MuonSD =
                        {
                                double  EnergyThresholdForPersistency = 1.0
                                bool    AllMuonsPersistent = false
                                bool    PrintHits = false
                        }

		}
		path p1 = { r, o1 }
	}		

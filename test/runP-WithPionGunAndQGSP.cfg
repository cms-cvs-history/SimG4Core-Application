process PROD  = 
	{

    # flat random E-gun, single pion
    #
    # to run it along with CMS detector simulation
    # (OscarProducer) make sure to select QGSP physics
    # list, instead DummyPhysics ("Dummy" has only EM 
    # process and wont know to model interactions of
    # hadrons with matter)
    #
    source = FlatRandomEGunSource
    {
      untracked int32 maxEvents = 10
      PSet PGunParameters =
      {
         # you can request more than 1 particle
         #vint32  PartID = {211,11}
         vint32 PartID = {211}
         double MinEta = -2.5
         double MaxEta = 2.5
         double MinPhi = 0.
         double MaxPhi = 360.
         double MinE   = 9.99
         double MaxE   = 10.01
      }
      # although PSet VertexGenerator is tracked, its use
      # is actually optional (there's internal cross-check)
      # if you do not give this PSet, vertex will be (0,0,0)
      PSet VertexGenerator =
      {
         string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
         double MeanX = 0.
         double MeanY = 0.
         double MeanZ = 0.
         double SigmaX = 0.015
         double SigmaY = 0.015
         double SigmaZ = 5.3
      }
      untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
    }


		#NOTE in 0_3_0_pre5 mag field and geomeetry are interfereing again
		#Magnetic Field
		es_source magfield = XMLIdealGeometryESSource {
		  # FileInPath GeometryConfiguration ="SimG4Core/Application/test/FieldConfiguration.xml"
		  FileInPath GeometryConfiguration ="Geometry/CMSCommonData/data/FieldConfiguration.xml"
		  #the proper root node is set in the xml file
		  string rootNodeName=""
		}
		es_module = VolumeBasedMagneticFieldESProducer {
 	           double findVolumeTolerance = 0.0
 	           untracked bool cacheLastVolume = true
	           untracked bool timerOn = false
		}

		#Geometry
		es_source = XMLIdealGeometryESSource 
		{ 
		  # FileInPath GeometryConfiguration = "SimG4Core/Application/test/SimConfiguration.xml"
		  FileInPath GeometryConfiguration = "Geometry/CMSCommonData/data/SimConfiguration.xml"
		  #the proper root node is set in the xml file
		  string rootNodeName = ""
                }
		es_module = TrackerGeometricDetESModule {}


                module o1 = PoolOutputModule { untracked string fileName = "simevent.root" }
		
 		module r = OscarProducer 
		{ 
			untracked int32 RunNumber = 1001
			untracked int32 G4EventManagerVerbosity = 0
			untracked int32 G4StackManagerVerbosity = 0
			untracked int32 G4TrackingManagerVerbosity = 0
			# bool UseMagneticField = true
			bool UseMagneticField = false
			bool OverrideUserStackingAction = true
			bool StoreRndmSeeds = false
			bool RestoreRndmSeeds = false
			string PhysicsTablesDirectory = "PhysicsTables"
			bool StorePhysicsTables = false
			bool RestorePhysicsTables = false
			#VPSet Watchers = {
			#	{ string type = "SimTracer"
			#	  bool verbose = true }
			#}
	                PSet MagneticField =
                        {
                                double delta = 1.
                        }
                	PSet Physics =
			{
				string type = "SimG4Core/Physics/QGSP"
				bool DummyEMPhysics = false
                                bool CutsPerRegion = true
				double DefaultCutValue = 1000. # in cm, i.e. 10m
				untracked int32 Verbosity = 0  # 1 will print cuts as they get set from DD
				                               # 2 will do as 1 + will dump Geant4 table of cuts
			}
			PSet Generator = 
			{
				bool ApplyPtCuts = true
				bool ApplyEtaCuts = true
				bool ApplyPhiCuts = false
				double MinPhiCut = 0.
				double MaxPhiCut = 360.
				double MinEtaCut = -5.5
				double MaxEtaCut = 5.5
				double MinPtCut = 40.
				double MaxPtCut = 999999.
				untracked int32 Verbosity = 0
		        }
			
			# this PSet wasn't actually used...
			# it's currently disabled from OscarProducer
			# it's now available with ParticleGuns
			# and will soon re-appear in other gen.sources
			#
#                        PSet VertexGenerator =
#                        {
#                                string type = "IOMC/EventVertexGenerators/GaussianEventVertexGenerator"
#                                double MeanX = 0.
#                                double MeanY = 0.
#                                double MeanZ = 0.
#                                double SigmaX = 0.015
#                                double SigmaY = 0.015
#                                double SigmaZ = 5.3
#                        }

			PSet RunAction = { string StopFile = "StopRun" }
			PSet EventAction =
			{
				bool CollapsePrimaryVertices = false
				string StopFile = "StopRun"
				untracked bool debug = false
			}
			PSet TrackingAction = 
			{ 
			   untracked bool DetailedTiming = false 
			}
			PSet SteppingAction =
			{
				bool   KillBeamPipe = true
				double CriticalEnergyForVacuum = 2.0
				double CriticalDensity = 1.e-25
				untracked int32  Verbosity = 0
			}
			PSet TrackerSD =
			{
				bool    ZeroEnergyLoss = false
				bool	NeverAccumulate = false
				bool	PrintHits = false
				double  ElectronicSigmaInNanoSeconds = 12.06         
				double  EnergyThresholdForPersistencyInGeV = 0.5
				double  EnergyThresholdForHistoryInGeV = 0.05
			}
                        PSet MuonSD =
                        {
                                double  EnergyThresholdForPersistency = 1.0
                                bool    AllMuonsPersistent = false
                                bool    PrintHits = false
                        }

                        PSet CaloSD = {
                           double EminTrack = 1.0
                           int32  CheckHits = 25
                           bool   UseMap = true
                           #int32  Verbosity = 1
			   int32 Verbosity = 0
                           bool   DetailedTiming = false
                        }
                        PSet ECalSD = {
                           bool   UseBirkLaw = false
                           double BirkC1 = 0.013
                           double BirkC2 = 9.6e-6
                           #int32  Verbosity = 11
			   int32 Verbosity = 0
                        }
                        PSet HCalSD = {
                           bool   UseBirkLaw = false
                           double BirkC1 = 0.013
                           double BirkC2 = 9.6e-6
                           #int32  Verbosity = 111
			   int32 Verbosity = 0
                           bool   UseShowerLibrary = true
                           bool   TestNumberingScheme = false
                        }
                        PSet CaloTrkProcessing = {
                           #int32  Verbosity = 1
			   int32 Verbosity = 0
                           bool   TestBeam  = false
                           double EminTrack = 0.01
                        }                     
	                PSet HFShower =    {
                           #int32  Verbosity = 11
			   int32 Verbosity = 0
                           double ProbMax   = 0.7268
                           double CFibre    = 0.50
                        }
                        PSet HFShowerLibrary = {
                           FileInPath FileName = "SimG4CMS/Calo/data/hfshowerlibrary_lhep.root"
                           string TreeEMID  = "h3"
                           string TreeHadID = "h8"
                        }
                        PSet HFCherenkov = {
                           #int32  Verbosity       = 1
			   int32 Verbosity = 0
                           double RefIndex        = 1.459
                           double Lambda1         = 280.0
                           double Lambda2         = 700.0
                           double Aperture        = 0.33
                           double ApertureTrapped = 0.22
                           double Gain            = 0.33
                           bool   CheckSurvive    = false
	                }
		}
		path p1 = { r }
		endpath outpath = { o1 }
	}		

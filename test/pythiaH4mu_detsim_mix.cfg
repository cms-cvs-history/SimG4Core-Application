process PROD = {

   # MessageLogger control
   #
   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}
       
      untracked vstring categories = { "FwkJob", "SimG4CoreApplication" }
 
      untracked PSet cout = 
      { 
         untracked PSet default = { untracked int32 limit = 0 }    # kill all messages in the log
	 untracked PSet SimG4CoreApplication = { untracked int32 limit = -1 }
         untracked PSet FwkJob  = { untracked int32 limit = -1 }  # except *all* of FwkJob's
      }
       
      #untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
   }
   
   service = Timing {}
    
   # control point for all seeds
   #
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 98765
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
      }
   }

   # physics event generation
   #
   include "IOMC/GeneratorInterface/data/PythiaHZZ4mu.cfi"
   replace PythiaSource.maxEvents = 25
   replace PythiaSource.pythiaHepMCVerbosity = true
   replace PythiaSource.pythiaPylistVerbosity = 1
   replace PythiaSource.maxEventsToPrint = 1

   # event vertex smearing - applies only once (internal check)
   # Note : all internal generators will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
   
   #Geometry
   #
   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   es_module = TrackerGeometricDetESModule {}
   
   # Magnetic Field
   #
   include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

   # Geant4-based CMS Detector simulation
   #
   include "SimG4Core/Application/data/g4SimHits.cfi"

   module mix = MixingModule 
   {
      secsource input = PoolRASource 
      {
         untracked vstring fileNames = 
	 {
	 #
	 # these 7 files hold ~53K minbias events similated in the detector (SimHits)
	 # with CMSSW_1_1_0; they can be used for pileup modeling;
	 # files seem to be compatible with 1_2_0-series (as of 120pre2);
	 # available at CERN (CASTOR) and Fnal (dCache);
	 # they're registered in DBS, thus they should be globally accessible via CRAB
	 # 
	 '/store/MC/2006/10/23/MC-110-os-minbias/2076379F-6B63-DB11-AC13-001731AF685B.root',
	 '/store/MC/2006/10/23/MC-110-os-minbias/469248E1-8063-DB11-8B60-003048767EDF.root',
	 '/store/MC/2006/10/23/MC-110-os-minbias/78E69C0D-3963-DB11-8B99-003048769E89.root',
	 '/store/MC/2006/10/23/MC-110-os-minbias/86B20A7F-3E63-DB11-9933-00304870E0AF.root',	 	 
	 '/store/MC/2006/10/23/MC-110-os-minbias/BA337A0F-3963-DB11-8D09-001731A28A31.root',
	 '/store/MC/2006/10/23/MC-110-os-minbias/C8B52F25-2963-DB11-8FDB-00304870DB05.root',
	 '/store/MC/2006/10/23/MC-110-os-minbias/CC080FD5-5B63-DB11-A054-00304870DDA9.root'	 
	 #
	 # these files below represent minbias events simulated in the detector
	 # with CMSSW_1_1_0, as the outcome of tests owards having larger samples; 
	 # they are available at least at FNAL/dCache; 
	 #
	 # these following 7 samples are merged
	 #
	 #'/store/MC/2006/10/23/MC-110-os-minbias/8884F3EA-3363-DB11-B0C0-001731AF67E1.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/8C31090C-2963-DB11-89FE-00304875AA13.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/B4A8EFD3-A962-DB11-A851-00304875AACB.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/D23434E8-2D63-DB11-93A5-001731AF68B5.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/DA1E8EE7-2D63-DB11-BCA3-001731AF6A8D.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/EE04DC58-2963-DB11-85BF-001731AF66A1.root',
	 #'/store/MC/2006/10/23/MC-110-os-minbias/B4A8EFD3-A962-DB11-A851-00304875AACB.root',
	 #
	 # ... and these 5 are unmerged (~5K events)
	 #
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/081176BD-A260-DB11-A5BF-003048767D6F.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/0A902C20-9F60-DB11-A0FB-00304875A7B5.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/123EBEC5-A260-DB11-922E-001731A28A31.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/4E8C6207-A160-DB11-AA0A-001731AF68B9.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/76028EC0-9B60-DB11-96D3-00304875A7B5.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/7A0516AC-A360-DB11-B9E4-001731AF684D.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/B23F1F6D-9460-DB11-9E5D-001731A283E1.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/D2C715C5-A260-DB11-9B2C-00304876A0EB.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/D6F09AC8-A160-DB11-974F-00304876A0EB.root',
	 #'/store/unmerged/PreProd/2006/10/20/Minbias-for-Pileup-CMSSW110/GEN-SIM/0000/D6F5E982-A260-DB11-97F0-001731A283E1.root' 
	 #
	 }  
         string type = "poisson"
         double averageNumber = 3
         int32 minBunch = -1
         int32 maxBunch = 2
         int32 seed = 1234567
      }
      int32 bunchspace = 25
      untracked bool checktof =false
   }
   
   # Digitization of the Tracker
   #
 
   # Tracker geometry - required for Pixel and SiStrip Digitizers
   #
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
    
   # Pixel's digitization
   #
   include "SimTracker/SiPixelDigitizer/data/PixelDigi.cfi"
 
   # SiStrip's digitization
   #
   include "SimTracker/SiStripDigitizer/data/SiStripDigi.cfi"
    
   # Digitization of Ecal and Hcal
 
   # NOTE : Both Ecal and Hcal geometries need to be present,
   #        even if only one digitizers is to run, and they're
   #        both included in the CaloGeometry.cfi
   #
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
#
# This cfi should be included to make the CaloTowersConstituentsMap
# I don't know if it's needed for unsuppressed digi's or at for zero-sup
#
   include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"
  
   # use trivial ESProducer for tests
   #
   include "CalibCalorimetry/EcalTrivialCondModules/data/EcalTrivialCondRetriever.cfi"
 
   include "CalibCalorimetry/HcalPlugins/data/hardwired_conditions.cfi"
   
 
   # unsuppressed digi's
   #
   include "SimCalorimetry/EcalSimProducers/data/ecaldigi.cfi"
    
   include "SimCalorimetry/HcalSimProducers/data/hcaldigi.cfi"
 
   # Muon Digitization
 
   # this holds CSC geom service, as need for CSC digi's
   # and the digitizer itself
   #
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"
   include "SimMuon/CSCDigitizer/data/muoncscdigi.cfi"
 
   # Muon DT digi's
                                                                                                                   
   # this holds geom.service as needed by DT digi's
   # and the digitizer itself
   #
   include "Geometry/DTGeometry/data/dtGeometry.cfi"
   include "SimMuon/DTDigitizer/data/muondtdigi.cfi"
 
   # this holds geom.service for the RPC digi's
   # the digitizer itself still needs to be given explicitely
   # but since it has no parameters, it doesn't matter...
   # only maybe the label should be agreed upon...
   #
   include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
   include "SimMuon/RPCDigitizer/data/muonrpcdigi.cfi"
   
   # Trigger Primitives Generation producer
   #
   # not used in 0_8_0
   #
   #include "SimCalorimetry/EcalTrigPrimProducers/data/ecaltp.cfi"
  
   # Selective Readout Processor producer
   #include "SimCalorimetry/EcalSelectiveReadoutProducers/data/ecalSelectiveReadout.cfi" # this is old (081)
   include "SimCalorimetry/EcalSelectiveReadoutProducers/data/ecalDigis.cfi"
  
   # Preshower Zero suppression producer
   #include "SimCalorimetry/EcalZeroSuppressionProducers/data/esZeroSuppression.cfi" # this is old (081)
   include "SimCalorimetry/EcalZeroSuppressionProducers/data/ecalPreshowerDigis.cfi"
    
   #
   # output is configured to drop Ecal unsuppressed digis
   #
   # if you don't want to keep in the CrossingFrame (product of the Mixing),
   # you can add to the outputCommands this: "drop CrossingFrame_*_*_*"
   #
   module GEN-SIM-DIGI = PoolOutputModule
   {
      untracked string fileName = "pythiaHZZ4mu_detsim_mix_digi.root"
      untracked vstring outputCommands = {
         "keep *",
         "drop *_ecalUnsuppressedDigis_*_*"
      }   
    }

   # now the order of execution
   #   
   sequence trDigi = { siPixelDigis & siStripDigis }
   sequence calDigi = { ecalUnsuppressedDigis & hcalDigis }
   sequence muonDigi = { muonCSCDigis &  muonDTDigis & muonRPCDigis }
   sequence doAllDigi = { trDigi & calDigi & muonDigi   } 
    sequence doAllDigiWithEcalZeroSup = { doAllDigi, ecalDigis, ecalPreshowerDigis } 
   path p1 = { VtxSmeared, g4SimHits, mix, doAllDigiWithEcalZeroSup }
   endpath e = { GEN-SIM-DIGI }

}
